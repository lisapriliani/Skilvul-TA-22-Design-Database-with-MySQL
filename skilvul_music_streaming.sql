-- CREATE DATABASE --
CREATE DATABASE skilvulmusicplayer;

-- USE DATABASE --
USE skilvulmusicplayer;

-- CREATE TABLE USER --
CREATE TABLE user(
 user_id  INT(100) NOT NULL AUTO_INCREMENT PRIMARY KEY,
 name  VARCHAR(255) NOT NULL,
 email VARCHAR(255) NOT NULL,
 password VARCHAR(255) NOT NULL
);

-- CREATE TABLE SIGNER --
CREATE TABLE singer(
 singer_id INT(100) NOT NULL AUTO_INCREMENT PRIMARY KEY,
 name varchar(255) NOT NULL
);

-- CREATE TABLE ALBUM --
CREATE TABLE album(
 album_id  INT(100) NOT NULL AUTO_INCREMENT PRIMARY KEY,
 name VARCHAR(255) NOT NULL,
 singer_id INT(100) NOT NULL,

 CONSTRAINT FK_SINGER_ALBUM 
 FOREIGN KEY (singer_id) 
 REFERENCES singer (singer_id)
);

-- CREATE TABLE TRACK --
CREATE TABLE track(
 track_id  INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
 title VARCHAR(255) NOT NULL,
 singer_id INT(100) NOT NULL,
 album_id  INT(100) NOT NULL,

 CONSTRAINT FK_SINGER_TRACK 
 FOREIGN KEY (singer_id) 
 REFERENCES singer (singer_id),

 CONSTRAINT FK_ALBUM_TRACK
 FOREIGN KEY (album_id) 
 REFERENCES album (album_id)
);

-- CREATE TABLE PLAYLIST --
CREATE TABLE playlist(
 playlist_id INT(100) NOT NULL AUTO_INCREMENT PRIMARY KEY,
 tracks INT(100) NULL,
 user_id INT(100) NOT NULL,
 
 CONSTRAINT FK_USER_PLAYLIST FOREIGN KEY (user_id) REFERENCES user (user_id)
);

-- CREATE TABLE CONJUNCTION --
CREATE TABLE playlist_track(
 id INT(100) NOT NULL AUTO_INCREMENT PRIMARY KEY,
 track_id INT(100) NOT NULL,
 playlist_id INT(100) NOT NULL,

 CONSTRAINT FK_TRACK_CONJ
 FOREIGN KEY (track_id) 
 REFERENCES track (track_id),

 CONSTRAINT FK_PLAYLIST_CONJ
 FOREIGN KEY (playlist_id) 
 REFERENCES playlist (playlist_id)
);